// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Exporter.HouseDBService.Models
{
    using Exporter.HouseDBService;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ExportFile
    {
        /// <summary>
        /// Initializes a new instance of the ExportFile class.
        /// </summary>
        public ExportFile()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExportFile class.
        /// </summary>
        public ExportFile(System.DateTime? dateAdded = default(System.DateTime?), string fileName = default(string), string originalFileName = default(string), string contentType = default(string), long? length = default(long?), byte[] fileByteArray = default(byte[]), long? id = default(long?))
        {
            DateAdded = dateAdded;
            FileName = fileName;
            OriginalFileName = originalFileName;
            ContentType = contentType;
            Length = length;
            FileByteArray = fileByteArray;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateAdded")]
        public System.DateTime? DateAdded { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fileName")]
        public string FileName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "originalFileName")]
        public string OriginalFileName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contentType")]
        public string ContentType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "length")]
        public long? Length { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fileByteArray")]
        public byte[] FileByteArray { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public long? Id { get; set; }

    }
}
